

# this is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}

upstream grafana_host {
	server grafana:9000;
}

upstream pypowerwall_host {
	server pypowerwall:8675;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	root /var/www/html;
	server_name _;

	# Proxy /grafana/* & co
        location /grafana/api/live/ {
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_set_header Host $http_host;
                proxy_pass http://grafana_host;
        }
        location /grafana/ {
                proxy_set_header Host $http_host;
                proxy_set_header X-Req-URI $request_uri;
                proxy_set_header X-Req-Instance "grafana";
                proxy_pass http://grafana_host;
        }

	# If location is EXACTLY /, Redirect to /grafana/
	location = / {
		absolute_redirect off;
		return 301 /grafana/;
	}

	# If location is EXACTLY /panel.html,
	# this should be rewritten to pypowerwall /
	location = /panel.html {
		rewrite (.*) / break;
                proxy_set_header Host $http_host;
                proxy_set_header X-Req-URI $request_uri;
                proxy_set_header X-Req-Instance "panel";
		proxy_redirect off;
                proxy_pass http://pypowerwall_host;
	}
	
	# Pass any other location to pypowerwall
	location / {
		proxy_set_header Host $http_host;
		proxy_set_header X-Req-URI $request_uri;
		proxy_set_header X-Req-Instance "slash";
		proxy_pass http://pypowerwall_host;
	}

}
