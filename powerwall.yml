services:
    influxdb:
        image: influxdb:1.8
        container_name: influxdb
        hostname: influxdb
        restart: unless-stopped
        volumes:
            - type: bind
              source: ./influxdb.conf
              target: /etc/influxdb/influxdb.conf
              read_only: true
            - type: bind
              source: ./influxdb
              target: /var/lib/influxdb
        ports:
            - "${INFLUXDB_PORTS:-8086:8086}"
        env_file:
            - influxdb.env
        healthcheck:
            test: curl -f http://influxdb:8086/health || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s

    pypowerwall:
        image: jasonacox/pypowerwall:0.14.1t81
        container_name: pypowerwall
        hostname: pypowerwall
        restart: unless-stopped
        volumes:
            - type: bind
              source: .auth
              target: /app/.auth
        user: "${PWD_USER:-1000:1000}"
        ports:
            - "${PYPOWERWALL_PORTS:-8675:8675}"
        environment:
            - PW_AUTH_PATH=.auth
        env_file:
            - pypowerwall.env
        healthcheck:
            test: wget --spider -q http://pypowerwall:8675/api/site_info || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s

    telegraf:
        image: telegraf:1.28.2
        container_name: telegraf
        hostname: telegraf
        restart: unless-stopped
        user: "${PWD_USER:-1000:1000}"
        command: [
            "telegraf",
            "--config",
            "/etc/telegraf/telegraf.conf",
            "--config-directory",
            "/etc/telegraf/telegraf.d"
        ]
        volumes:
            - type: bind
              source: ./telegraf.conf
              target: /etc/telegraf/telegraf.conf
              read_only: true
            - type: bind
              source: ./telegraf.local
              target: /etc/telegraf/telegraf.d/local.conf
              read_only: true
            - type: bind
              source: ./VERSION
              target: /etc/telegraf/VERSION
              read_only: true
            - type: bind
              source: ./ver.sh
              target: /etc/telegraf/ver.sh
              read_only: true
        depends_on:
            - influxdb
            - pypowerwall
        healthcheck:
            test: pgrep telegraf || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s

    grafana:
        image: grafana/grafana:9.5.21-ubuntu
        container_name: grafana
        hostname: grafana
        restart: unless-stopped
        user: "${PWD_USER:-1000:1000}"
        volumes:
            - type: bind
              source: ./grafana
              target: /var/lib/grafana
        ports:
            - "${GRAFANA_PORTS:-9000:9000}"
        env_file:
            - grafana.env
        depends_on:
            - influxdb
        healthcheck:
            test: curl -f http://grafana:9000/api/health || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s

    weather411:
        image: jasonacox/weather411:0.2.3
        container_name: weather411
        hostname: weather411
        restart: unless-stopped
        user: "${PWD_USER:-1000:1000}"
        volumes:
            - type: bind
              source: ./weather
              target: /var/lib/weather
              read_only: true
        ports:
            - "${WEATHER411_PORTS:-8676:8676}"
        environment:
            - WEATHERCONF=/var/lib/weather/weather411.conf
        depends_on:
            - influxdb
        healthcheck:
            test: wget --spider -q http://weather411:8676/stats || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s
